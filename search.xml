<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>docker常用指令</title>
    <url>/2021/05/07/docker%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<p>docker常用的命令,包括docker启动命令,docker镜像命令,docker容器命令等…</p>
<span id="more"></span>
<h1 id="docker命令"><a href="#docker命令" class="headerlink" title="docker命令"></a>docker命令</h1><h2 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker --help</span><br></pre></td></tr></table></figure>

<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p><code>sudo /etc/init.d/docker start</code></p>
<h1 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h1><h2 id="镜像帮助"><a href="#镜像帮助" class="headerlink" title="镜像帮助"></a>镜像帮助</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images --help</span><br></pre></td></tr></table></figure>

<h2 id="查询镜像"><a href="#查询镜像" class="headerlink" title="查询镜像"></a>查询镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker search 镜像名</span><br></pre></td></tr></table></figure>

<h2 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull 镜像名</span><br></pre></td></tr></table></figure>
<h2 id="查看已下载镜像"><a href="#查看已下载镜像" class="headerlink" title="查看已下载镜像"></a>查看已下载镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<h2 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rmi 镜像名</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h1><h2 id="容器帮助"><a href="#容器帮助" class="headerlink" title="容器帮助"></a>容器帮助</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps --help</span><br></pre></td></tr></table></figure>

<h2 id="从镜像生成容器"><a href="#从镜像生成容器" class="headerlink" title="从镜像生成容器"></a>从镜像生成容器</h2><h3 id="交互式界面生成"><a href="#交互式界面生成" class="headerlink" title="交互式界面生成"></a>交互式界面生成</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it [--name 别名] 镜像名</span><br></pre></td></tr></table></figure>
<p>配合 <code>Ctrl+P+Q</code>不关闭容器退出界面使用。</p>
<h3 id="守护式后台生成"><a href="#守护式后台生成" class="headerlink" title="守护式后台生成"></a>守护式后台生成</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d [--name 别名] 镜像名  /bin/sh -c &quot;while true;do echo hello liyaocool!;sleep 2;done&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>/bin/sh -c “…” 意为 让后台一直每两秒打印日志，防止docker的后台机制判定休眠自动停止容器。</p>
<h2 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps [options]</span><br></pre></td></tr></table></figure>
<p>[options]:</p>
<ul>
<li>-a 查看全部；</li>
<li>-q 只查看id；</li>
</ul>
<h2 id="容器的退出"><a href="#容器的退出" class="headerlink" title="容器的退出"></a>容器的退出</h2><ul>
<li>停止容器并退出交互界面<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></li>
<li>不停止容器并退出交互界面(快捷键)<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ctrl + P + Q</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="容器的再进入"><a href="#容器的再进入" class="headerlink" title="容器的再进入"></a>容器的再进入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it 容器ID /bin/bash</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="日志命令"><a href="#日志命令" class="headerlink" title="日志命令"></a>日志命令</h1><h2 id="日志帮助"><a href="#日志帮助" class="headerlink" title="日志帮助"></a>日志帮助</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker logs --help</span><br></pre></td></tr></table></figure>
<h2 id="日志查看"><a href="#日志查看" class="headerlink" title="日志查看"></a>日志查看</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker logs [options] 容器ID</span><br></pre></td></tr></table></figure>
<p>options:</p>
<ul>
<li>-t 显示时间</li>
<li>-f 动态跟随更新</li>
<li>–tail n 显示最新n条日志</li>
</ul>
<h1 id="镜像操作"><a href="#镜像操作" class="headerlink" title="镜像操作"></a>镜像操作</h1><h2 id="容器内文件-复制-到宿主机"><a href="#容器内文件-复制-到宿主机" class="headerlink" title="容器内文件 复制 到宿主机"></a>容器内文件 复制 到宿主机</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker cp 容器ID:/home/abc /home</span><br></pre></td></tr></table></figure>
<p>将容器的<code>/home/abc</code> 文件复制到宿主机  <code>/home</code></p>
<h2 id="镜像提交"><a href="#镜像提交" class="headerlink" title="镜像提交"></a>镜像提交</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker commit -m=&quot;提交的描述信息&quot; -a=&quot;作者名&quot; 容器ID 要创建的镜像名:[标签] </span><br></pre></td></tr></table></figure>

<h2 id="镜像启动-停止"><a href="#镜像启动-停止" class="headerlink" title="镜像启动/停止"></a>镜像启动/停止</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker start 容器ID/别名</span><br><span class="line">docker stop 容器ID/别名</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 常用指令</title>
    <url>/2021/05/06/hexo%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<p>hexo常用的指令,包括创建文章,生成页面,发布.</p>
<span id="more"></span>
<h2 id="文章生成"><a href="#文章生成" class="headerlink" title="文章生成"></a>文章生成</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;新文章&quot;</span><br></pre></td></tr></table></figure>
<p>然后就可以编辑 <code>source/_posts/新文章.md</code></p>
<h2 id="生成页面"><a href="#生成页面" class="headerlink" title="生成页面"></a>生成页面</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库触发器</title>
    <url>/2021/05/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
    <content><![CDATA[<p>所谓触发器,就是在指定表上，(insert(插入)、update(跟新)、delete(删除))事件动作,触发（After(之后)时机,Before(之前)），执行指定的一群或一个sql语句。</p>
<span id="more"></span>

<h2 id="创建触发器语法"><a href="#创建触发器语法" class="headerlink" title="创建触发器语法"></a>创建触发器语法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TRIGGER trigger_name trigger_time trigger_event ON tbl_name FOR EACH ROW </span><br><span class="line">trigger_stmt</span><br></pre></td></tr></table></figure>
<ul>
<li><code>trigger_name</code>: 触发器名称，用户自行指定</li>
<li><code>trigger_time</code>: 触发时机，取值<code>BEFORE</code>（之前）、<code>AFTER</code>（之后）</li>
<li><code>trigger_event</code>: 触发事件，<code>INSERT</code>、<code>UPDATE</code>、<code>DELETE</code>。（插入、更新、删除）</li>
<li><code>tbl_name</code>: 需要创建触发器的表名</li>
<li><code>trigger_stmt</code>: 触发程序体，可以是一条SQL语句或是BEGIN和END包含的索条语句</li>
</ul>
<p>由上方触发时机(<code>BEFORE</code>,<code>AFTER</code>) 和触发事件(<code>INSERT</code>、<code>UPDATE</code>、<code>DELETE</code>),并且一张表上不能创建两个相同类型的触发器，因此一张表上面最多能创建 <code>6</code> 种类型的触发器：</p>
<ul>
<li><code>BEFORE INSERT</code>、<code>BEFORE UPDATE</code>、<code>BEFORE DELETE</code></li>
<li><code>AFTER INSERT</code>、<code>AFTER UODATE</code>、<code>AFTER DELETE</code></li>
</ul>
<h3 id="创建触发器实例"><a href="#创建触发器实例" class="headerlink" title="创建触发器实例"></a>创建触发器实例</h3><p>目的：对新插入数据的名字统一改为 二狗子。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line">CREATE TRIGGER tg_rename</span><br><span class="line">    BEFORE INSERT</span><br><span class="line">    ON t_user</span><br><span class="line">    FOR EACH ROW</span><br><span class="line">BEGIN</span><br><span class="line">    SET NEW.name = &#x27;二狗子&#x27;;</span><br><span class="line">end $$</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line"># 触发器执行插入</span><br><span class="line">INSERT INTO t_user (name, gender, age)</span><br><span class="line">VALUES (&#x27;二哈&#x27;, 1, 15);</span><br></pre></td></tr></table></figure>

<p>上方有个 <code>NEW</code>/<code>OLD</code>,表示新增的记录或删除的记录。</p>
<h3 id="触发器的其他命令"><a href="#触发器的其他命令" class="headerlink" title="触发器的其他命令"></a>触发器的其他命令</h3><ul>
<li>显示触发器：<code>SHOW TRIGGER</code></li>
<li>删除触发器：<code>DROP TRIGGER IF EXISTS tg_name</code></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库存储过程和存储函数</title>
    <url>/2021/05/07/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%AD%98%E5%82%A8%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p>有时候会忘记数据库的存储函数和存储过程,这里记录一下创建删除存储过程,创建删除存储函数SQL语法…</p>
<span id="more"></span>
<h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><h3 id="输入参数型的创建"><a href="#输入参数型的创建" class="headerlink" title="输入参数型的创建"></a>输入参数型的创建</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELIMITER //</span><br><span class="line">CREATE PROCEDURE GetAllUsers(IN userId BIGINT)</span><br><span class="line">BEGIN</span><br><span class="line">    SELECT * FROM t_user WHERE ID = userId;</span><br><span class="line">END //</span><br><span class="line">DELIMITER ;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>DELIMITER</code> 是开启用’//‘替换sql结束符 <code>;</code>的。<code>END</code> 之前<code>//</code>的才是 创建存储过程的语句整体。<br>语句结束后，要及时把<code>//</code>替换回来 <code>;</code>.</li>
<li>IN 输入参数</li>
</ul>
<h4 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CALL GetAllUsers(17);</span><br></pre></td></tr></table></figure>

<h3 id="输出参数型的创建"><a href="#输出参数型的创建" class="headerlink" title="输出参数型的创建"></a>输出参数型的创建</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELIMITER //</span><br><span class="line">CREATE PROCEDURE GetUsersCount(OUT count bigint)</span><br><span class="line">BEGIN</span><br><span class="line">    SELECT COUNT(*) INTO count FROM t_user;</span><br><span class="line">    SELECT @count AS &#x27;MYCOUNT&#x27;;</span><br><span class="line">END //</span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="调用-1"><a href="#调用-1" class="headerlink" title="调用"></a>调用</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CALL GetUsersCount(@count);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="存储过程的其他命令"><a href="#存储过程的其他命令" class="headerlink" title="存储过程的其他命令"></a>存储过程的其他命令</h2><ul>
<li><p>显示存储过程状态详情</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW PROCEDURE STATUS;</span><br></pre></td></tr></table></figure></li>
<li><p>显示存储过程的创建详情</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW CREATE PROCEDURE GetAllUsers;</span><br></pre></td></tr></table></figure></li>
<li><p>删除存储过程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP PROCEDURE IF EXISTS GetAllUsers;</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="存储函数"><a href="#存储函数" class="headerlink" title="存储函数"></a>存储函数</h1><h2 id="创建函数"><a href="#创建函数" class="headerlink" title="创建函数"></a>创建函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELIMITER $$</span><br><span class="line">CREATE FUNCTION GetAllUsers(userId VARCHAR(20))</span><br><span class="line">    RETURNS VARCHAR(20)</span><br><span class="line">    DETERMINISTIC</span><br><span class="line">BEGIN</span><br><span class="line">    RETURN (SELECT name FROM t_user WHERE ID = userId);</span><br><span class="line">end $$</span><br></pre></td></tr></table></figure>
<ul>
<li>在<code>CREATE FUNCTION</code>子句之后指定存储函数的名称。</li>
<li>列出括号为内存储函数的所有参数。默认情况下，所有参数均为<code>IN</code>参数。不能为参数指定<code>IN</code>，<code>OUT</code>或<code>INOUT</code>修饰符。</li>
<li>必须在<code>RETURNS</code>语句中指定返回值的数据类型。它可以是任何有效的<code>MySQL</code>数据类型。</li>
<li>对于相同的输入参数，如果存储的函数返回相同的结果，这样则被认为是确定性的，否则存储的函数不是确定性的。必须决定一个存储函数是否是确定性的<code>[NOT] DETERMINISTIC</code>。如果您声明不正确，则存储的函数可能会产生意想不到的结果，或者不使用可用的优化，从而降低性能。</li>
<li>将代码写入存储函数的主体中。 它可以是单个语句或复合语句。 在主体部分中，必须至少指定一个<code>RETURN</code>语句。<code>RETURN</code>语句用于返回一个值给调用者。 每当到达<code>RETURN</code>语句时，存储的函数的执行将立即终止。</li>
</ul>
<h2 id="调用存储函数"><a href="#调用存储函数" class="headerlink" title="调用存储函数"></a>调用存储函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT GetAllUsers(17);</span><br></pre></td></tr></table></figure>

<h2 id="存储函数的其他命令"><a href="#存储函数的其他命令" class="headerlink" title="存储函数的其他命令"></a>存储函数的其他命令</h2><ul>
<li>删除函数 <code>DROP FUNCTION GetAllUsers;</code></li>
</ul>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
</search>
